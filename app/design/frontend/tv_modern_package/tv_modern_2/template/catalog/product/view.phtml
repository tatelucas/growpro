<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>

<?php //adding code from previous website -dwl
	$cartArray = array();
	$cartProducts = array();
		$pricing_category = $_product->getCategoryTierPrice();
		//This model now just being used for master content management (description, etc)
		$MasterProductList = Mage::getModel('catalog/product')->getCollection()
			->addAttributeToFilter('category_tier_price', $pricing_category)
			->addAttributeToFilter('category_tier_price_master', 1)
			->addAttributeToFilter('category_tier_price_sku', 'N')
			->addAttributeToSelect('*');

		foreach($MasterProductList as $MasterProduct) {continue;}

		$cartItems = Mage::getModel('checkout/session')->getQuote()->getAllItems(); //These items do not have the master product ID.
		if ($cartItems != NULL) {

		foreach ($cartItems as $cartItem) {
			if ($cartItem->getproductId() == $_product->getId()) {$thisCartItem = &$cartItem;}

			if (substr($cartItem->getSku(), -2, 1) == '-'){
				$cartItemSKU = substr($cartItem->getSku(), -1);
				switch ($cartItemSKU) {
					case "N" :
						$cartItemSKUhandle = 'no-imprint';
					break;
					case "B" :
						$cartItemSKUhandle = 'black-imprint';
					break;
					case "C" :
						$cartItemSKUhandle = 'single-color-imprint';
						$cartItemSKU = "B";
					break;
			}
			}else {
				//single-option master products may have an SKu of 'N', so set cartitemsku to this in order to correctly match the master
				$cartItemSKU = "N";
				$cartItemSKUhandle = 'price';
			}

			$ProductModel = Mage::getModel('catalog/product')->load($cartItem->getProductId());
			$MasterProductListC = Mage::getModel('catalog/product')->getCollection()
				->addAttributeToFilter('category_tier_price', $ProductModel->getCategoryTierPrice())
				->addAttributeToFilter('category_tier_price_master', 1)
				->addAttributeToSelect('*');
			foreach ($MasterProductListC as $MasterProductC) {
					if ( $MasterProductC->getCategoryTierPriceSku() == $cartItemSKU) {
						$cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()]['SKU'] = $cartItemSKU; //might not need this in the array
						$cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()]['SKU-handle'] = $cartItemSKUhandle;
						$cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()]['Price-type'] = $MasterProductC->getCategoryPricing();
							if ($MasterProductC->getCategoryPricing() == 1){
									if (!array_key_exists('category-qty', $cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()])) {
										$cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()]['category-qty'] = 0;
									}
								$cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()]['category-qty'] = $cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()]['category-qty'] + $cartItem->getQty();
							} else {
								$cartArray[$MasterProductC->getCategoryTierPrice()][$MasterProductC->getId()][$cartItem->getProductId()] = $cartItem->getQty();
							}
					}
			}
		}

			if (array_key_exists($pricing_category, $cartArray)) {
					foreach ($cartArray[$pricing_category] as $optionArray) {
						if ($optionArray['Price-type'] == 1 ) {
								$cartProducts[$optionArray['SKU-handle']] = $optionArray['category-qty'];
						} else if (array_key_exists($_product->getId(), $optionArray) ) {
								$cartProducts[$optionArray['SKU-handle']] = $optionArray[$_product->getId()];
						}
					}
				}
}
?>




<?php // Previous and Next product links in product page

if(!$_product->getCategoryIds())
return; // Don't show Previous and Next if product is not in any category

$cat_ids = $_product->getCategoryIds(); // get all categories where the product is located
$cat = Mage::getModel('catalog/category')->load( $cat_ids[0] ); // load first category, you should enhance this, it works for me

$order = Mage::getStoreConfig('catalog/frontend/default_sort_by');
$direction = 'asc'; // asc or desc

$category_products = $cat->getProductCollection()->addAttributeToSort($order, $direction);
$category_products->addAttributeToFilter('status',1); // 1 or 2
$category_products->addAttributeToFilter('visibility',4); // 1.2.3.4

$cat_prod_ids = $category_products->getAllIds(); // get all products from the category
$_product_id = $_product->getId();

$_pos = array_search($_product_id, $cat_prod_ids); // get position of current product
$_next_pos = $_pos+1;
$_prev_pos = $_pos-1;

// get the next product url
if( isset($cat_prod_ids[$_next_pos]) ) {
$_next_prod = Mage::getModel('catalog/product')->load( $cat_prod_ids[$_next_pos] );
} else {
$_next_prod = Mage::getModel('catalog/product')->load( reset($cat_prod_ids) );
}
// get the previous product url
if( isset($cat_prod_ids[$_prev_pos]) ) {
$_prev_prod = Mage::getModel('catalog/product')->load( $cat_prod_ids[$_prev_pos] );
} else {
$_prev_prod = Mage::getModel('catalog/product')->load( end($cat_prod_ids) );
}
?>
<script type="text/javascript">

<?php
if ($cartProducts) {
$jsObjpre = "var cartItems = {";
$jsObj = '';
foreach ($cartProducts as $cartProductName=>$cartItemQty) {
	$jsObj .= '"' . $cartProductName . '" : '  . $cartItemQty . ' ,'; }
$jsObj = substr($jsObj, 0, -1) . '};';
echo $jsObjpre . $jsObj;
} else {
	echo("var cartItems = 0;");
};

?>

    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);



</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="product-view">
    <div class="next-prev-page">
    <?php if($_next_prod != NULL): ?>
        <a class="btn-next" href="<?php print $_next_prod->getUrlPath(); if($search_parameter):?>?search=1<?php endif;?>"><span><?php echo $this->__('NEXT PRODUCT') ?><i class="fa fa-caret-right"></i></span></a>
    <?php endif; ?>

    <?php if($_prev_prod != NULL): ?>
        <a class="btn-prev" href="<?php print $_prev_prod->getUrlPath(); if($search_parameter):?>?search=1<?php endif;?>"><span><i class="fa fa-caret-left"></i><?php echo $this->__('PREVIOUS PRODUCT') ?></span></a>
    <?php endif; ?>
    <span class="asc">/</span>
    </div>
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="row">
            <div class="product-img-box col-sm-4 col-md-4 col-sms-6 col-smb-12">
                <?php echo $this->getChildHtml('media') ?>
            </div>
            <div class="col-sm-12 col-md-5 col-sms-6 col-smb-12">
                <div class="product-shop">
                <div class="product-name">
                    <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                </div>
                <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
                <?php //turning off instock and list price display - actually, this should be conditional: if tiered pricing, then no price display - dwl - 12/23/15
				// echo $this->getChildHtml('product_type_data') ?>

                <?php if ($_product->getShortDescription()):?>
                    <div class="short-description">
                        <!--<h2><?php echo $this->__('Quick Overview') ?></h2>-->
                        <div class="std"><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></div>
                    </div>
                <?php endif;?>

<?php //somewhere in here we attempt to add the product-tabs from the old site - dwl
?>

        <div id='product-tabs'>
			<ul id='product-tabs'>
				<?php $tabs_class = (($_product->getHowItWorks() || $MasterProduct->getHowItWorks())? 'third' : 'half') ?>
					<li class='<?php echo $tabs_class ?>'><a href='#product-ordering'>Pricing</a></li>
				<li class='<?php echo $tabs_class ?>'><a href='#product-specs'>Product Description</a></li>

				<?php if ($_product->getHowItWorks() || $MasterProduct->getHowItWorks()): ?>
				<li class='<?php echo $tabs_class ?>'><a href='#product-nextsteps'>Next Steps</a></li>
				<?php endif ?>
			</ul>
			<div id='product-ordering'>

			<div id='tab-content'>
	   			<?php echo $this->getTierPriceHtml();

				 // if  ($tierPrice_result == "test") {
				 // 				 	echo $this->getChildHtml('alert_urls');
				 // 			        echo $this->getChildHtml('product_type_data'); }
			?>

		      <?php if ($_product->isSaleable() && $this->hasOptions()):?>
		            <?php  echo $this->getChildChildHtml('container2', '', true, true) ?>
		      <?php endif;?>
			</div>
			</div>
			<div id='product-specs'>
				 <?php if ($_product->getDescription()):?>
			          <div class="tab-content">
						<?php echo $_helper->productAttribute($_product, nl2br($_product->getDescription()), 'description') ?>
					</div>
				<?php else:?>
					  <div class="tab-content">
						<?php echo $_helper->productAttribute($_product, nl2br($MasterProduct->getDescription()), 'description') ?>
					  </div>
			     <?php endif;?>
			</div>
			<?php if ($_product->getHowItWorks() || $MasterProduct->getHowItWorks()): ?>
			<div id='product-nextsteps' class='third'>
				<?php if ($_product->getHowItWorks()):?>
			          <div class="tab-content">
						<?php echo $_helper->productAttribute($_product, nl2br($_product->getHowItWorks()), 'how_it_works') ?>
					</div>
				<?php else:?>
					  <div class="tab-content">
						<?php echo $_helper->productAttribute($_product, nl2br($MasterProduct->getHowItWorks()), 'how_it_works') ?>
					  </div>
			     <?php endif;?>
			</div>
			<?php endif ?>
		</div>
		<div id='add-to-holder'>
			<!-- ADD SELECTION STATUS STUFF HERE-->
			<div id='selection-status'></div>
			 <?php echo $this->getChildHtml('addtocart') ?>
		</div>



                <?php // echo $this->getTierPriceHtml() ?>
                <?php echo $this->getChildHtml('alert_urls') ?>
                <?php echo $this->getChildHtml('extrahint') ?>

                <div class="add-to-box">
                    <?php echo $this->getChildHtml('addto') ?>
                    <?php if ($this->canEmailToFriend()): ?>
                        <p class="email-friend"><a class="email-friend-a" href="<?php echo $this->helper('catalog/product')->getEmailToFriendUrl($_product) ?>" title="<?php echo $this->__('Email to a Friend') ?>"><i class="fa fa-envelope-o"></i><?php //echo $this->__('Email to a Friend') ?></a></p>
                    <?php endif; ?>
                </div>
                <div class="addthis_native_toolbox"></div>
                <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-549fdf445bd3a1b9" async="async"></script>
                <?php if (!$this->hasOptions()):?>
                    <div class="add-to-box-cart">

                        <?php if($_product->isSaleable()): ?>
                            <?php // echo $this->getChildHtml('addtocart') ?>
                        <?php endif; ?>
                        <?php //echo $this->getChildHtml('addto') ?>
                    </div>
                    <?php echo $this->getChildHtml('extra_buttons') ?>
                <?php elseif (!$_product->isSaleable()): ?>


                <?php endif; ?>

                <?php echo $this->getChildHtml('other');?>

                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                <?php endif;?>

                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                    <?php // echo $this->getChildChildHtml('container2', '', true, true) ?>
                <?php endif;?>

                </div>
            </div>
            <div class="col-sm-12 col-md-3 col-sms-12 col-smb-12">
                <?php echo $this->getChildHtml('related_slider') ?>
            </div>
        </div>
        <div class="clearer"></div>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
    </form>
    <script type="text/javascript">
    //<![CDATA[
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
    //]]>
    </script>


    </div>

    <div class="product-collateral row-fluid">
        <?php echo $this->getChildHtml('info_tabs') ?>
        <?php echo $this->getChildHtml('upsell_products') ?>
	<?php echo $this->getChildHtml('product_additional_data') ?>
    </div>
</div>
